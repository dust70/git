[add]
    ignore-errors = true

[alias]
    ac = commit --all --branch --status --verbose
    ad = add --all --
    ai = add --interactive --
    ba = branch -a --verbose
    bc = checkout -b
    bd = branch --verbose --delete
    bdd = branch --verbose --delete --force
    ca = commit -q --amend --branch --status --verbose
    cf = checkout --quiet --force
    cl = !"git clone --progress --verbose --template=${HOME}/.git/template --recurse-submodules"
    cm = commit --branch --status --verbose
    cma = !"git co master && git rebase -n origin/master"
    cn = !"git reflog expire --all && git fsck --unreachable --full && " \
        "git prune && git gc --aggressive --quiet && git repack -Adq && git prune-packed --quiet"
    co = checkout
    dt = difftool
    fe = fetch --progress
    fm = !"git fe --all && git fe --all --tags"
    ge = grep --break --heading --show-function
    gf = !"git ge --function-context"
    gr = !"git ge --ignore-case"
    in = !"git ui --no-assume-unchanged"
    iu = !"git ui --assume-unchanged"
    l10 = !"GIT_PAGER=less git log -10 --pretty=short --notes --date=short"
    la = !"GIT_PAGER=less git log --all --pretty=graph --notes --date=short --abbrev-commit --graph"
    lg = log --stat --notes
    lm = log --merges --stat --notes
    lo = !"GIT_PAGER=less git log --pretty=graph --notes --date=short --graph"
    lp = log -10 --patch-with-stat
    ls = ls-files -cdkmosu --no-empty-directory --exclude-standard --full-name --
    ma = merge --abort
    me = merge --stat --summary
    mf = !"git me --ff"
    mm = !"git mf origin/$(git branch-name)"
    mma = !"git mf origin/master"
    mt = mergetool --no-prompt
    pd = push --delete --no-verify --progress origin
    pf = !"git ph --force origin $(git branch-name)"
    pfn = !"git pf --no-verify"
    ph = push --progress --set-upstream --tags
    pl = pull
    pn = !"git ph --no-verify origin $(git branch-name)"
    pt = push --no-verify --progress --set-upstream --tags
    pu = !"for i in $(git remote); do git ph ${i} $(git branch-name); done"
    ra = rebase --abort
    rc = rebase --continue
    re = reset
    rh = reset --hard
    rp = rebase --skip
    rs = reset --soft
    rv = remote --verbose
    sa = stash save
    sb = !"git br && git sr \"git br\""
    sc = stash clear
    se = !"git rebase --interactive $(git rev-list --reverse HEAD | head -n 1)"
    sf = !"git submodule foreach"
    sl = stash list
    sm = submodule
    so = stash pop
    sr = !"git sf --recursive"
    ss = !"git st && git sf \"git st -s; echo\" && git submodule status --recursive"
    st = status
    su = !"git pull && echo && git sr \"git pull\" && git submodule -q sync && git ss"
    ui = update-index --verbose

    add-new = !"git ls-files -zo --no-empty-directory --exclude-standard --full-name|" \
        "xargs -I {} -0 bash -c 'git add \"{}\" && git cm -m \"add file {} to repository\"'"
    aliases = config --get-regexp "^alias"
    bclean = !"git for-each-ref --format='%(refname:short)' refs/heads | " \
        "grep -Ev 'master' | xargs git bd"
    branch-name = !"git for-each-ref --format='%(refname:short)' $(git symbolic-ref HEAD)"
    brup = !"git fm && git branch --column=never --list --no-color|" \
        "xargs -I {} bash -c 'i=\"{}\" && git co ${i//\\*/} && git reset-all >> /dev/null' && git cma"
    remove = !"git ls-files -zd --no-empty-directory --exclude-standard --full-name|" \
        "xargs -I {} -0 bash -c 'git rm \"{}\" && git cm -m \"remove file {} from repository\"'"
    reset-all = !"(git sa || true) && git rh --quiet $(git rev-list --reverse HEAD | head -n 1) && "\
        "git merge --quiet origin/$(git branch-name); (git so || true)"
    update = !"git ls-files -zm --no-empty-directory --exclude-standard --full-name|" \
        "xargs -I {} -0 bash -c 'git add \"{}\" && git cm -m \"update file {} in repository on date $(date \"+%F\")\"'"

[apply]
    ignorewhitespace = change
    whitespace = nowarn

[branch]
    autoSetupMerge = always
    autoSetupRebase = always

[clean]
    requireForce = true

[color]
    branch = auto
    diff = auto
    grep = auto
    interactive = auto
    showbranch = auto
    status = auto

[color "branch"]
    current = green normal bold
    local = yellow normal bold
    plain = white normal bold
    remote = red normal bold

[color "status"]
    added = green normal bold
    updated = green normal bold
    changed = yellow normal bold
    nobranch = red white blink
    untracked = red normal bold

[commit]
    status = true
    template = ~/.git/commit.msg

[includeIf "gitdir:~/git/pricecompare/*"]
    path = ~/.git/config-atlassian

[core]
    compression = 9
    editor = vim
    eol = lf
    excludesfile = ~/.git/ignore
    loosecompression = 9
    notesRef = refs/notes/rene
    preloadindex = true

[credential]
    helper = cache

[diff]
    context = 5
    mnemonicprefix = true
    submodule = log

[fetch]
    prune = true
    recurseSubmodules = true

[grep]
    lineNumber = true
    extendedRegexp = true

[help]
    format = man

[i18n]
    logOutputEncoding = utf8

[interactive]
    singlekey = true

[log]
    abbrevCommit = true
    date = iso
    follow = true
    showRoot = true

[merge]
    log = true
    renormalize = true
    stat = true
    tool = vimdiff3
    verbosity = 5

[mergetool]
    keepBackup = false
    writeToTemp = true

[pack]
    compression = 9

[pretty]
    graph = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset

[pull]
    ff = only

[push]
    default = matching
    followTags = true
    recurseSubmodules = on-demand

[rebase]
    autoSquash = true
    autoStash = true
    stat = true

[rerere]
    autoUpdate = true
    enabled = true

[status]
    relativePaths = false
    showStash = true
    showUntrackedFiles = all

[tag]
    sort = version:refname

[transfer]
    fsckObjects = true

[user]
    email = info@renatius.de
    name = Ren√© Six
    useConfigOnly = true

[includeIf "gitdir:~/git/pricecompare/*"]
    path = ~/.git/config-pricecompare

[tig]
    commit-order = topo
    horizontal-scroll = 95%
    ignore-case = yes
    line-graphics = utf-8
    mouse = no
    refresh-interval = 300
    refresh-mode = periodic
    split-view-height = 75%
    tab-size = 4
    vertical-split = false

    # View settings
    main-view = line-number:yes,interval=5 id:no date:default author:abbreviated,width=15 commit-title:yes,graph=yes,refs=yes,overflow=no
    blame-view = line-number:yes,interval=5 date:default author:abbreviated,width=15 file-name:auto id:yes,color text

    # Pager based views
    blob-view = line-number:yes,interval=5 text
    diff-view = line-number:yes,interval=5 text:yes,commit-title-overflow=no
    log-view = line-number:yes,interval=5 text
    pager-view = line-number:yes,interval=5 text
    stage-view = line-number:yes,interval=5 text

[tig "color"]
    default = default default normal
    cursor = white blue bold
    title-blur = blue default
    title-focus = blue default bold

# vim: filetype=gitconfig foldmethod=indent foldminlines=0
